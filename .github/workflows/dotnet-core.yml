name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  configuration: ${{ 'Release' }}
  project: ${{ 'Src/TwIngChallenge.csproj' }}
  runtime: ${{ 'win-x64' }}
  testProject: ${{ 'Tst/TwIngChallenge.Tests.csproj' }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.4
      with:
        versionSpec: '5.3.x'
    - name: Use GitVersion
      id: gitversion # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v0.9.4
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Install dependencies
      run: dotnet restore ${{ env.project }} --runtime ${{ env.runtime }}
    - name: Build
      run: dotnet build ${{ env.project }} --configuration ${{ env.configuration }} --runtime ${{ env.runtime }} /warnaserror --no-restore /p:AssemblyVersion=${{ steps.gitversion.outputs.majorMinorPatch }} /p:Version=${{ steps.gitversion.outputs.majorMinorPatch }}
    - name: Test
      run: dotnet test ${{ env.testProject }} --no-build --verbosity normal --configuration ${{ env.configuration }} /p:AssemblyVersion=${{ steps.gitversion.outputs.majorMinorPatch }}  --collect "Code coverage" /p:Version=${{ steps.gitversion.outputs.majorMinorPatch }} /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura -l:trx;LogFileName=${{ env.GITHUB_WORKSPACE }}/test-results/TestOutput.xml
    - name: Publish
      run: dotnet publish ${{ env.project }} --no-build --configuration ${{ env.configuration }} --runtime ${{ env.runtime }} --output publishOutput
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1.3
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        check_name: Unit Test Results
        files: test-results/**/*.xml
        report_individual_runs: true
        deduplicate_classes_by_file_name: false
    - name: Upload DotNet Console App
      uses: actions/upload-artifact@v2
      with:
        name: console
        path: publishOutput
      if:
        contains('
          refs/heads/main
        ', github.ref)
      
